defaultTasks 'pdeClean','pdeBuild','rename'

apply from : "http://repo.orchestra/plugins-releases-local/com/thalesgroup/gradle/plugins/hudsonjobinfos/1.0/hudsonjobinfos-1.0.gradle"

buildscript {
  repositories{
    add(new org.apache.ivy.plugins.resolver.URLResolver()) {
      name ="Artifactory"
      url = "http://repo.orchestra/plugins-releases-local"
      addArtifactPattern "$url/[organisation]/[artifact]-([classifier]-)[revision].[ext]"
      addIvyPattern "$url/[organisation]/[artifact]-ivy-[revision].xml"   
      descriptor = "optional"
      checkmodified = true
    }
  }

  dependencies {
    classpath "com.thalesgroup.gradle.plugins:pdePlugin:7.+"
  }
}

apply plugin: "FeaturePde"

def workingDirectory="${workspace}/work"

def generation_feature = 'com.thalesgroup.orchestra.mozart.generation.doors.feature'
def assembly_feature = 'com.thalesgroup.orchestra.mozart.automatic_assembly.doors.feature'
def contribution_feature = 'com.thalesgroup.orchestra.doors.framework.context.contribution.feature'
def environment_feature = 'com.thalesgroup.orchestra.doors.framework.environment.feature'

configure(FeaturePde){   
	usePreviousLinks=false
	buildDirectory="${workingDirectory}"

	pluginsSrcDirList=["${workspace}/Sources/eclipse/plugins/"]
	featuresSrcDirList=["${workspace}/Sources/eclipse/features/"]
	features=[generation_feature, assembly_feature, environment_feature, contribution_feature]
	
	targetFile = "${workspace}/Sources/eclipse/features/${environment_feature}/connectorDoors.target"
  
	buildId=timestamp

  eclipseLauncher = "R:/launcher/3.8-basebuilder" // launcher
	
	base='R:/extloc/platform-3.8/eclipse-sdk-3.8.2' //Location in your file system of your eclipse installation including the delta pack

  additionalProperties = [
    "javacSource" : "1.7",
    "javacTarget" : "1.7",
		"javacDebugInfo" : true
  ]
}

def dist = "${workspace}/dist"

pdeClean << {
	ant.delete(dir: dist)
}


task rename << {
	ant.mkdir(dir: dist)
	def originalName = "${workingDirectory}/${FeaturePde.buildId}/${generation_feature}-${FeaturePde.buildId}.zip"
	def deliverName  = "${dist}/ConnectorDoors_generation-${version}.${timestamp}.zip"
	ant.move(file: originalName, tofile:  deliverName)
	
  originalName = "${workingDirectory}/${FeaturePde.buildId}/${assembly_feature}-${FeaturePde.buildId}.zip"
  deliverName  = "${dist}/ConnectorDoors_auto_assembly-${version}.${timestamp}.zip"
	ant.move(file: originalName, tofile:  deliverName)
    
  originalName = "${workingDirectory}/${FeaturePde.buildId}/${environment_feature}-${FeaturePde.buildId}.zip"
  deliverName  = "${dist}/ConnectorDoors_environment-${version}.${timestamp}.zip"
	ant.move(file: originalName, tofile:  deliverName)

	originalName = "${workingDirectory}/${FeaturePde.buildId}/${contribution_feature}-${FeaturePde.buildId}.zip"
  deliverName  = "${dist}/ConnectorDoors_context_contribution-${version}.${timestamp}.zip"
	ant.move(file: originalName, tofile:  deliverName)
}
