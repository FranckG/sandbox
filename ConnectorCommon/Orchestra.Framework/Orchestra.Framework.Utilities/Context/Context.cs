// ----------------------------------------------------------------------------------------------------
// File Name: Context.cs
// Project: Orchestra.Framework.Utilities
// Copyright (c) Thales, 2010 - 2012. All rights reserved.
// ----------------------------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 

namespace Orchestra.Framework.Core
{
    using System;
    using System.CodeDom.Compiler;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Xml.Schema;
    using System.Xml.Serialization;

    /// <summary>
    /// Class uses to Serialize/Deserialize the context definition
    /// </summary>
    [GeneratedCode("xsd", "2.0.50727.3038")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.thalesgroup.com/orchestra/framework/4_1_2/Context")]
    [XmlRoot("contextDefinition", Namespace = "http://www.thalesgroup.com/orchestra/framework/4_1_2/Context",
        IsNullable = false)]
    public partial class ContextDefinition
    {
        private Context contextField;

        #region IContextDefinition Members
        ///<summary>
        /// return <see cref="IContext"/> child
        ///</summary>
        [XmlElement(Form = XmlSchemaForm.Unqualified)]
        public Context context
        {
            get
            {
                return this.contextField;
            }
            set
            {
                this.contextField = value;
            }
        }
        #endregion
    }

    /// <summary>
    /// Class Context
    /// </summary>
    [GeneratedCode("xsd", "2.0.50727.3038")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.thalesgroup.com/orchestra/framework/4_1_2/Context")]
    public partial class Context
    {
        private Artefact[] artifactField;

        private string exportFilePathField;
        private string typeField;
        private string keepOpenField;
        private string launchArgumentsField;

        ///<summary>
        /// Gets the <see cref="Artefact"/> at the specified index.
        ///</summary>
        ///<returns>The <see cref="Artefact"/> at the specified index. </returns>
        [XmlElement("artifact", Form = XmlSchemaForm.Unqualified)]
        public Artefact[] artefact
        {
            get
            {
                return this.artifactField;
            }
            set
            {
                this.artifactField = value;
            }
        }

        #region IContext Members
        ///<summary>
        /// Gets the command name.
        ///</summary>
        [XmlAttribute]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        ///<summary>
        /// Gets the Generic Export Format (GEF) result model file absolute path.
        ///</summary>
        [XmlAttribute]
        public string exportFilePath
        {
            get
            {
                return this.exportFilePathField;
            }
            set
            {
                this.exportFilePathField = value;
            }
        }

        /// <summary>
        /// Gets or sets the keep open.
        /// </summary>
        [XmlAttribute]
        public string keepOpen
        {
            get
            {
                return this.keepOpenField;
            }
            set
            {
                this.keepOpenField = value;
            }
        }

        /// <summary>
        /// Gets or sets the launch arguments.
        /// </summary>
        [XmlAttribute]
        public string launchArguments
        {
            get
            {
                return this.launchArgumentsField;
            }
            set
            {
                this.launchArgumentsField = value;
            }
        }
        #endregion
    }

    /// <remarks/>
    [GeneratedCode("xsd", "2.0.50727.3038")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.thalesgroup.com/orchestra/framework/4_1_2/Context")]
    public partial class Artefact
    {
        private string environmentIdField;
        private EnvironmentProperty[] environmentPropertiesField;

        /// <summary>
        /// Gets or sets the environment properties for the current <see cref="Artefact"/> object.
        /// </summary>
        [XmlElement("environmentProperties", Form = XmlSchemaForm.Unqualified)]
        public EnvironmentProperty[] environmentProperties
        {
            get
            {
                return this.environmentPropertiesField;
            }
            set
            {
                this.environmentPropertiesField = value;
            }
        }

        /// <summary>
        /// Gets or sets the environment identifier for the current <see cref="Artefact"/> object.
        /// </summary>
        [XmlAttribute]
        public string environmentId
        {
            get
            {
                return this.environmentIdField;
            }
            set
            {
                this.environmentIdField = value;
            }
        }

        #region IUri Members
        ///<summary>
        /// Gets or sets the Uri for the current <see cref="Artefact"/> object. 
        ///</summary>
        [XmlAttribute("uri")]
        public string Uri
        {
            get
            {
                return this.ToString();
            }
            set
            {
                this.SetUri(value);
            }
        }

        ///<summary>
        /// Gets or sets the physical path of the root artifact for the current <see cref="Artefact"/> object.
        ///</summary>
        [XmlAttribute("rootPhysicalPath")]
        public string RootPhysicalPath { get; set; }
        #endregion
    }

    /// <summary>
    /// Class describes the environment property (name, value)
    /// </summary>
    [GeneratedCode("xsd", "2.0.50727.3038")]
    [Serializable]
    [DebuggerStepThrough]
    [DesignerCategory("code")]
    [XmlType(Namespace = "http://www.thalesgroup.com/orchestra/framework/4_1_2/Context")]
    public class EnvironmentProperty
    {
        private string nameField;

        private string valueField;

        /// <summary>
        /// property' name
        /// </summary>
        [XmlAttribute]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <summary>
        /// property' value
        /// </summary>
        [XmlAttribute]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
}