pragma encoding, "UTF-8"
pragma runLim, 0

#include <OrchestraConstantes.inc>
#include <OrchestraInstall.inc>
#include <OMIManagement/OrchestraManageOMI.inc>

int bx_intProjectsCount = 0
Project bx_p

for bx_p in database do {
	Folder f = folder(fullName(bx_p))
	if (canModify(f)) {
		bx_intProjectsCount++
	}
}
string bx_ListOfName[bx_intProjectsCount]

int bx_intIndex = 0
for bx_p in database do {
	Folder f = folder(fullName(bx_p))
	if (canModify(f)) {
		bx_ListOfName[bx_intIndex] = name(bx_p)
		bx_intIndex++
	}
}

sort(bx_ListOfName)

Skip tpfo_skpProjectList = createString
bool bx_blnDoNothing = false

DB bx_projectShow
DBE bx_projectShowLabel 
DBE bx_projectList
DBE bx_okbtn
DBE bx_cancelbtn 
DBE bx_unselectAll
DBE bx_selectAll
int bx_intSelectedProjectCount = 0
bool bs_SelectAll = true

// peuplement de tpfo_skpProjectList avec les noms des projets cochés
void bx_CheckAProject (DBE xx, int intCheckedModuleIndex) {
	string strName
	strName = "/" bx_ListOfName[intCheckedModuleIndex]
	if (getCheck(xx, intCheckedModuleIndex)) {
		put(tpfo_skpProjectList, strName, strName)
		bx_intSelectedProjectCount++
	} else {
		delete(tpfo_skpProjectList, strName)
		bx_intSelectedProjectCount--
	}
	if (bx_intSelectedProjectCount == 0) {
		inactive(bx_okbtn)
	} else {
		active(bx_okbtn)
	}
}
// call back pour la boite de dialogue
void bx_CloseButton(DB xx) {
	bx_blnDoNothing = true
	release xx
}
void bx_okButton(DBE xx) {
	bx_blnDoNothing = false
	release bx_projectShow
}

void bx_CancelButton(DBE xx) {
	bx_blnDoNothing = true
	release bx_projectShow
}

bx_projectShow = create("Doors Projects Artefacts", styleCentered|styleFloating)
bx_projectShowLabel = label(bx_projectShow, "Select projects to upgrade.")
label(bx_projectShow, "Note: only projects with modify access are displayed.")
bx_projectList = listView(bx_projectShow, listViewOptionCheckboxes|listViewOptionMultiselect, 300,20, bx_ListOfName)

void bx_SelectUnselectAllButton(DBE xx) {
	int noOfResources = noElems bx_projectList 
	int i 
	for (i = 0; i < noOfResources; i++) {
		setCheck(bx_projectList, i, bs_SelectAll)
	}
    bs_SelectAll = !bs_SelectAll
	if (bs_SelectAll) {
		inactive(bx_unselectAll)
		active(bx_selectAll)
	} else {
		inactive(bx_selectAll)
		active(bx_unselectAll)
	}
}

bx_selectAll = button(bx_projectShow, "Select All", bx_SelectUnselectAllButton)
bx_unselectAll = button(bx_projectShow, "Unselect All", bx_SelectUnselectAllButton)
inactive(bx_unselectAll)

bx_okbtn = button(bx_projectShow, "Build Orchestra Module Id", bx_okButton)
opposite(bx_projectShow)
bx_cancelbtn = button(bx_projectShow,"Cancel", bx_CancelButton)
close(bx_projectShow, false, bx_CloseButton)
inactive(bx_okbtn)

realize bx_projectShow {
	insertColumn(bx_projectList , 0, "Project", 280, iconNone)
	set(bx_projectList, bx_CheckAProject)
}

block bx_projectShow

if (bx_blnDoNothing) halt

#include <OMIManagement/tagProjectForOrchestra.inc>

tpfo_TagProjectList()
