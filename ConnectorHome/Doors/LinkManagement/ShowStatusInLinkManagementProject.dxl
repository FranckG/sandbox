#include <OrchestraInstall.inc>
#include <OrchestraConstantes.inc>
#include <OrchestraString.inc>
#include <OMIManagement/OrchestraManageOMI.inc>
#include <OrchestraStatus.inc>
#include <OrchestraUri.inc>
#include <Environment/OrchestraDoorsEnvironment.inc>

Module ssilmp_mod = current

string ssilmp_modIdEncoded = ""
string ssilmp_modId = uniqueID(ssilmp_mod)
string ssilmp_sProjId = uniqueID(getParentProject(ssilmp_mod))
Item ssilmp_itemRef = itemFromID(ssilmp_modId)

AttrDef ssilmp_ad = find(module ssilmp_itemRef, COrchestraModuleIdAttribute)
if (!null ssilmp_ad) {
	ssilmp_modId = (module ssilmp_itemRef).COrchestraModuleIdAttribute
} else {
	warningBox "The project is not tagged for Orchestra.\nPlease tag the project."
	halt	
}
if (matches("\\.", ssilmp_modId)) {
	Regexp r = regexp "([0-9a-z]*)\\.([0-9a-z]*)"
	if (r ssilmp_modId)
		ssilmp_modIdEncoded = ssilmp_modId[match 1] "%2E" ssilmp_modId[match 2]
} else {
	warningBox "The project is not tagged for Orchestra.\nPlease tag the project."
	halt	
}

if (! exists attribute "HasLinkManagerLinks") then {
	AttrDef ad = create object type "text" attribute "HasLinkManagerLinks"
	string val = "//LinkManager automated attribute"
	ad = modify(ad, setDXL, val)
}

string ssilmp_sViewName = currentView(ssilmp_mod) 
string ssilmp_sRootName
odenv_Initialize()
//generate the uri of the current module
odenv_FindRootNameForAProjectId(ssilmp_sProjId, ssilmp_sRootName)
odenv_Terminate()
InitializeOrchestraUri()
ouri_SetRootType ("Doors")
ouri_SetRootName (ssilmp_sRootName) 
ouri_SetObjectID(ssilmp_modId..CIdentifierSeparatorString..ssilmp_sViewName)
ouri_SetObjectType(CView)
string ssilmp_viewUri = ouri_GetUri()
TerminateOrchestraUri() 

//generate output path filename
string ssilmp_outputFile =  (getenv("TEMP")) "\\output_linkManagerDoors" (intOf(today))""  ".txt"
system COrchestraLMFullPath " GetDocumentLinksStatusDoors \"" ssilmp_modIdEncoded "\" \"" ssilmp_outputFile "\" \"" ssilmp_viewUri "\""
